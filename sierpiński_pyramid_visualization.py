# -*- coding: utf-8 -*-
"""Sierpiński Pyramid Visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C1vl0lfikcPZXJ8ivDd-izX-DNCLWzHr
"""

pip install numpy matplotlib

import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d.art3d import Poly3DCollection

def sierpinski_pyramid(vertices, level):
    """
    Recursively generates the vertices of a Sierpiński Pyramid.

    Parameters:
    - vertices: Vertices of the pyramid (array of shape (4, 3))
    - level: Level of recursion

    Returns:
    - List of vertices for the Sierpiński Pyramid at the given level
    """
    if level == 0:
        return [vertices]

    midpoints = [
        (vertices[0] + vertices[1]) / 2,
        (vertices[0] + vertices[2]) / 2,
        (vertices[0] + vertices[3]) / 2,
        (vertices[1] + vertices[2]) / 2,
        (vertices[1] + vertices[3]) / 2,
        (vertices[2] + vertices[3]) / 2
    ]

    new_vertices = [
        vertices[0], midpoints[0], midpoints[1], midpoints[2],
        midpoints[0], vertices[1], midpoints[3], midpoints[4],
        midpoints[1], midpoints[3], vertices[2], midpoints[5],
        midpoints[2], midpoints[4], midpoints[5], vertices[3]
    ]

    pyramids = []
    for i in range(0, len(new_vertices), 4):
        pyramids.extend(sierpinski_pyramid(np.array(new_vertices[i:i + 4]), level - 1))

    return pyramids

def plot_pyramid(pyramids):
    """
    Plots the Sierpiński Pyramid using Matplotlib.

    Parameters:
    - pyramids: List of vertices for the Sierpiński Pyramid
    """
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')

    # Create a collection of 3D polygons
    for pyramid in pyramids:
        poly3d = [[pyramid[0], pyramid[1], pyramid[2]],
                   [pyramid[0], pyramid[1], pyramid[3]],
                   [pyramid[0], pyramid[2], pyramid[3]],
                   [pyramid[1], pyramid[2], pyramid[3]]]
        ax.add_collection3d(Poly3DCollection(poly3d, alpha=0.3))

    ax.set_xlabel('X axis')
    ax.set_ylabel('Y axis')
    ax.set_zlabel('Z axis')
    ax.set_title('Sierpiński Pyramid Visualization')
    ax.set_xlim([-1, 1])
    ax.set_ylim([-1, 1])
    ax.set_zlim([0, 1.5])
    plt.show()

def main():
    # Define the vertices of the base tetrahedron
    vertices = np.array([
        [0, 0, 0],   # Vertex A
        [1, 0, 0],   # Vertex B
        [0.5, np.sqrt(3)/2, 0],  # Vertex C
        [0.5, np.sqrt(3)/6, np.sqrt(2/3)]  # Vertex D (top)
    ])

    level = 3  # Change this to create a more detailed pyramid
    pyramids = sierpinski_pyramid(vertices, level)
    plot_pyramid(pyramids)

if __name__ == "__main__":
    main()